name: PWA CI/CD Workflow # Nombre del flujo de trabajo

on:
  push:
    branches:
      - main
      - master
      - development
      - feature/*
  pull_request:
    branches:
      - main
      - master
      
      - development
  workflow_dispatch: # Permite la ejecución manual del flujo de trabajo

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Sistema operativo para el job

    steps:
      # 1. Revisar código del repositorio
      - name: Revisar código
        uses: actions/checkout@v2

      # 2. Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      # 3. Cache de dependencias para optimizar el flujo
      - name: Cache de dependencias
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Configurar variables de entorno
      - name: Configurar variables de entorno
        run: echo "REACT_APP_GOOGLE_API_KEY=${{ secrets.REACT_APP_GOOGLE_API_KEY }}" >> $GITHUB_ENV

      # 5. Instalar dependencias
      - name: Instalar dependencias
        run: npm ci

      # 6. Ejecución de pruebas unitarias
      - name: Ejecutar pruebas unitarias
        run: npm test

      # 7. Generar reporte de cobertura
      - name: Ejecutar pruebas con cobertura
        run: npm run test:coverage

      # 8. Subir reporte de cobertura como artefacto
      - name: Guardar reporte de cobertura
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage

      # 9. Pruebas E2E
      - name: Iniciar el servidor para pruebas E2E
        run: npm start &
      - name: Esperar al servidor
        run: |
          echo "Esperando al servidor para pruebas E2E..."
          sleep 10
      - name: Ejecutar pruebas E2E
        run: npm run cypress:run

      # 10. Compilación del proyecto
      - name: Compilar el proyecto
        run: npm run build

      # 11. Subir artefactos de compilación
      - name: Subir artefactos de compilación
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build/

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test # Este job se ejecutará después de que build-and-test sea exitoso
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')
    
    steps:
      # 1. Revisar código del repositorio (necesario para obtener los archivos de compilación)
      - name: Revisar código
        uses: actions/checkout@v2

      # 2. Desplegar aplicación
      - name: Desplegar aplicación
        run: echo "Aquí iría la configuración para desplegar en el entorno de producción"